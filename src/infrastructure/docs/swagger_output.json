{
    "openapi": "3.0.0",
    "info": {
       "version": "1.0.0",
       "title": "Swagger",
       "description": "A sample API",
       "termsOfService": "http://swagger.io/terms/",
       "contact": {
          "name": "Swagger API Team",
          "email": "apiteam@swagger.io",
          "url": "http://swagger.io"
       }
    },
    "servers": [
       {
          "url": "http://localhost:3000/api-docs"
       }
    ],
    "paths": {
       "/customers": {
          "get": {
             "tags": [
                "CUSTOMER"
             ],
             "summary": "Returns all customers from the system that the customer has access to",
             "description": "Returns all customers from the system that the customer has access to",
             "operationId": "findCustomers",
             "responses": {
                "200": {
                   "description": "customer response",
                   "content": {
                      "application/json": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Customer"
                            }
                         }
                      }
                   }
                },
                "default": {
                   "description": "unexpected error",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Error"
                         }
                      }
                   }
                }
             }
          },
          "post": {
             "tags": [
                "CUSTOMER"
             ],
             "summary": "Creates a new customer in the store.  Duplicates are not allowed",
             "description": "Creates a new customer in the store.  Duplicates are not allowed",
             "operationId": "addCustomer",
             "requestBody": {
                "description": "Customer to add to the store",
                "required": true,
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/NewCustomer"
                      }
                   }
                }
             },
             "responses": {
                "201": {
                   "description": "customer response",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Customer"
                         }
                      }
                   }
                },
                "default": {
                   "description": "unexpected error",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Error"
                         }
                      }
                   }
                }
             }
          }
       },
       "/customers/{id}": {
          "get": {
             "tags": [
                "CUSTOMER"
             ],
             "summary": "Returns a customer based on a single ID, if the customer does not have access to the customer",
             "description": "Returns a customer based on a single ID, if the customer does not have access to the customer",
             "operationId": "find customer by id",
             "parameters": [
                {
                   "name": "id",
                   "in": "path",
                   "description": "ID of customer to fetch",
                   "required": true,
                   "schema": {
                      "type": "integer",
                      "format": "int64"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "customer response",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Customer"
                         }
                      }
                   }
                },
                "default": {
                   "description": "unexpected error",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Error"
                         }
                      }
                   }
                }
             }
          },
          "put": {
             "tags": [
                "CUSTOMER"
             ],
             "summary": "Update a customer in the store.  Duplicates are not allowed",
             "description": "Update a customer in the store.  Duplicates are not allowed",
             "operationId": "updateCustomer",
             "requestBody": {
                "description": "Customer to add to the store",
                "required": true,
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/NewCustomer"
                      }
                   }
                }
             },
             "responses": {
                "200": {
                   "description": "customer response",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Customer"
                         }
                      }
                   }
                },
                "default": {
                   "description": "unexpected error",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Error"
                         }
                      }
                   }
                }
             }
          },
          "delete": {
             "tags": [
                "CUSTOMER"
             ],
             "summary": "deletes a single customer based on the ID supplied",
             "description": "deletes a single customer based on the ID supplied",
             "operationId": "deleteCustomer",
             "parameters": [
                {
                   "name": "id",
                   "in": "path",
                   "description": "ID of customer to delete",
                   "required": true,
                   "schema": {
                      "type": "integer",
                      "format": "int64"
                   }
                }
             ],
             "responses": {
                "204": {
                   "description": "customer deleted"
                },
                "default": {
                   "description": "unexpected error",
                   "content": {
                      "application/json": {
                         "schema": {
                            "$ref": "#/components/schemas/Error"
                         }
                      }
                   }
                }
             }
          }
       }
    },
    "components": {
       "schemas": {
          "Customer": {
             "allOf": [
                {
                   "$ref": "#/components/schemas/NewCustomer"
                },
                {
                   "type": "object",
                   "required": [
                      "id"
                   ],
                   "properties": {
                      "id": {
                         "type": "integer",
                         "format": "int64"
                      }
                   }
                }
             ]
          },
          "NewCustomer": {
             "type": "object",
             "required": [
                "firstName",
                "lastName",
                "documentNumber",
                "email",
                "phone",
                "address"
             ],
             "properties": {
                "firstName": {
                   "type": "string"
                },
                "lastName": {
                   "type": "string"
                },
                "documentNumber": {
                   "type": "string"
                },
                "email": {
                   "type": "string"
                },
                "phone": {
                   "type": "string"
                },
                "address": {
                   "type": "string"
                },
                "creditAvailable": {
                   "type": "number"
                }
             }
          },
          "Error": {
             "type": "object",
             "required": [
                "message"
             ],
             "properties": {
                "message": {
                   "type": "string"
                }
             }
          }
       }
    }
 }